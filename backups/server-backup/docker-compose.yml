version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: medsync-postgres
    environment:
      POSTGRES_DB: medsync
      POSTGRES_USER: medsync_user
      POSTGRES_PASSWORD: medsync_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - medsync-network
    restart: unless-stopped

  # MedSync Server
  server:
    build: .
    container_name: medsync-server
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://medsync_user:medsync_password@postgres:5432/medsync
      PGHOST: postgres
      PGPORT: 5432
      PGUSER: medsync_user
      PGPASSWORD: medsync_password
      PGDATABASE: medsync
      SESSION_SECRET: your_super_secure_session_secret_at_least_64_characters_long
      PORT: 5000
    ports:
      - "5000:5000"
    volumes:
      - ./uploads:/app/public/uploads
      - ./logs:/app/logs
    networks:
      - medsync-network
    depends_on:
      - postgres
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis (optional, for session storage)
  redis:
    image: redis:7-alpine
    container_name: medsync-redis
    ports:
      - "6379:6379"
    networks:
      - medsync-network
    restart: unless-stopped
    volumes:
      - redis_data:/data

volumes:
  postgres_data:
  redis_data:

networks:
  medsync-network:
    driver: bridge