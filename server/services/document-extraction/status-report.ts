/**
 * RELAT√ìRIO COMPLETO DOS EXTRATORES IMPLEMENTADOS
 * Status atual das operadoras de plano de sa√∫de
 */

export interface ExtractorStatus {
  operadora: string;
  status: 'IMPLEMENTADO' | 'PARCIAL' | 'PENDENTE';
  padraoCarteirinha: string;
  exemplo: string;
  funcionalidades: string[];
  debugging: boolean;
  observacoes: string;
}

export const EXTRATORES_STATUS: ExtractorStatus[] = [
  {
    operadora: 'SUL AM√âRICA',
    status: 'IMPLEMENTADO',
    padraoCarteirinha: '17 d√≠gitos come√ßando com 888 ou 8888',
    exemplo: '88812345678901234',
    funcionalidades: [
      '‚úÖ Extra√ß√£o n√∫mero carteirinha',
      '‚úÖ Detec√ß√£o operadora por texto',
      '‚úÖ Valida√ß√£o formato espec√≠fico',
      '‚úÖ Suporte a varia√ß√µes 888/8888'
    ],
    debugging: true,
    observacoes: 'Extrator funcional com padr√£o /\\b(8{3,4}\\d{13,14})\\b/'
  },
  
  {
    operadora: 'BRADESCO SA√öDE',
    status: 'IMPLEMENTADO',
    padraoCarteirinha: '15 d√≠gitos no formato XXX XXX XXXXXX XXX',
    exemplo: '123 456 789012 345',
    funcionalidades: [
      '‚úÖ Extra√ß√£o n√∫mero carteirinha',
      '‚úÖ Detec√ß√£o operadora por texto',
      '‚úÖ Remo√ß√£o espa√ßos autom√°tica',
      '‚úÖ Detec√ß√£o p√≥s-CNS quando presente'
    ],
    debugging: true,
    observacoes: 'Extrator funcional com padr√£o /(\\d{3}[\\s]*\\d{3}[\\s]*\\d{6}[\\s]*\\d{3})/'
  },
  
  {
    operadora: 'UNIMED',
    status: 'IMPLEMENTADO',
    padraoCarteirinha: '17 d√≠gitos com espa√ßamento espec√≠fico',
    exemplo: '0 994 910825083001 5',
    funcionalidades: [
      '‚úÖ Extra√ß√£o n√∫mero carteirinha',
      '‚úÖ Detec√ß√£o operadora por texto',
      '‚úÖ Concatena√ß√£o autom√°tica dos grupos',
      '‚úÖ Suporte formato espa√ßado complexo'
    ],
    debugging: true,
    observacoes: 'Extrator funcional com padr√£o /(\\d)\\s+(\\d{3})\\s+(\\d{12})\\s+(\\d)/'
  },
  
  {
    operadora: 'AMIL',
    status: 'IMPLEMENTADO',
    padraoCarteirinha: '8-12 d√≠gitos, detectado ap√≥s "N√∫mero do Benefici√°rio"',
    exemplo: '11581786 7',
    funcionalidades: [
      '‚úÖ Extra√ß√£o n√∫mero carteirinha',
      '‚úÖ Detec√ß√£o operadora por texto',
      '‚úÖ Separa√ß√£o autom√°tica d√≠gito verificador',
      '‚úÖ Filtro para evitar confus√£o com data nascimento'
    ],
    debugging: true,
    observacoes: 'Extrator funcional com padr√£o /(\\d{8})\\s+(\\d)/, corrigido para n√£o capturar datas'
  },
  
  {
    operadora: 'PORTO SEGURO SA√öDE',
    status: 'IMPLEMENTADO',
    padraoCarteirinha: '16 d√≠gitos no formato XXXX XXXX XXXX XXXX',
    exemplo: '4869 7908 0000 0247',
    funcionalidades: [
      '‚úÖ Extra√ß√£o n√∫mero carteirinha',
      '‚úÖ Detec√ß√£o operadora por texto',
      '‚úÖ Concatena√ß√£o autom√°tica grupos de 4',
      '‚úÖ Formato padr√£o cart√£o de cr√©dito'
    ],
    debugging: true,
    observacoes: 'Extrator funcional com padr√£o /(\\d{4})\\s+(\\d{4})\\s+(\\d{4})\\s+(\\d{4})/'
  },
  
  {
    operadora: 'HAPVIDA',
    status: 'PARCIAL',
    padraoCarteirinha: 'Pendente defini√ß√£o',
    exemplo: 'A definir',
    funcionalidades: [
      '‚ö†Ô∏è Detec√ß√£o operadora por texto',
      '‚ùå Extra√ß√£o n√∫mero carteirinha',
      '‚ùå Valida√ß√£o formato espec√≠fico'
    ],
    debugging: false,
    observacoes: 'Detecta operadora mas extra√ß√£o de carteirinha n√£o implementada'
  },
  
  {
    operadora: 'NOTREDAME INTERM√âDICA',
    status: 'PARCIAL',
    padraoCarteirinha: 'Pendente defini√ß√£o',
    exemplo: 'A definir',
    funcionalidades: [
      '‚ö†Ô∏è Detec√ß√£o operadora por texto',
      '‚ùå Extra√ß√£o n√∫mero carteirinha',
      '‚ùå Valida√ß√£o formato espec√≠fico'
    ],
    debugging: false,
    observacoes: 'Detecta operadora mas extra√ß√£o de carteirinha n√£o implementada'
  },
  
  {
    operadora: 'GOLDEN CROSS',
    status: 'PARCIAL',
    padraoCarteirinha: 'Pendente defini√ß√£o',
    exemplo: 'A definir',
    funcionalidades: [
      '‚ö†Ô∏è Detec√ß√£o operadora por texto',
      '‚ùå Extra√ß√£o n√∫mero carteirinha',
      '‚ùå Valida√ß√£o formato espec√≠fico'
    ],
    debugging: false,
    observacoes: 'Detecta operadora mas extra√ß√£o de carteirinha n√£o implementada'
  }
];

/**
 * Gera relat√≥rio em texto das operadoras
 */
export function gerarRelatorioOperadoras(): string {
  let relatorio = '\nüìã RELAT√ìRIO DE EXTRATORES - OPERADORAS DE PLANO DE SA√öDE\n';
  relatorio += '='.repeat(70) + '\n\n';
  
  const implementados = EXTRATORES_STATUS.filter(e => e.status === 'IMPLEMENTADO');
  const parciais = EXTRATORES_STATUS.filter(e => e.status === 'PARCIAL');
  const pendentes = EXTRATORES_STATUS.filter(e => e.status === 'PENDENTE');
  
  relatorio += `üìä RESUMO GERAL:\n`;
  relatorio += `‚úÖ Implementados: ${implementados.length}\n`;
  relatorio += `‚ö†Ô∏è Parciais: ${parciais.length}\n`;
  relatorio += `‚ùå Pendentes: ${pendentes.length}\n`;
  relatorio += `üìà Total: ${EXTRATORES_STATUS.length}\n\n`;
  
  relatorio += `üöÄ OPERADORAS COMPLETAMENTE IMPLEMENTADAS:\n`;
  relatorio += '-'.repeat(50) + '\n';
  
  implementados.forEach(operadora => {
    relatorio += `\nüè• ${operadora.operadora}\n`;
    relatorio += `   Padr√£o: ${operadora.padraoCarteirinha}\n`;
    relatorio += `   Exemplo: ${operadora.exemplo}\n`;
    relatorio += `   Debug: ${operadora.debugging ? '‚úÖ Ativo' : '‚ùå Inativo'}\n`;
    relatorio += `   Funcionalidades:\n`;
    operadora.funcionalidades.forEach(func => {
      relatorio += `     ${func}\n`;
    });
    relatorio += `   Obs: ${operadora.observacoes}\n`;
  });
  
  if (parciais.length > 0) {
    relatorio += `\n‚ö†Ô∏è OPERADORAS PARCIALMENTE IMPLEMENTADAS:\n`;
    relatorio += '-'.repeat(50) + '\n';
    
    parciais.forEach(operadora => {
      relatorio += `\nüè• ${operadora.operadora}\n`;
      relatorio += `   Status: Detecta operadora, mas extra√ß√£o incompleta\n`;
      relatorio += `   Funcionalidades:\n`;
      operadora.funcionalidades.forEach(func => {
        relatorio += `     ${func}\n`;
      });
      relatorio += `   Obs: ${operadora.observacoes}\n`;
    });
  }
  
  return relatorio;
}

/**
 * Lista de debugging dispon√≠vel por operadora
 */
export const DEBUGGING_FEATURES = {
  'SUL_AMERICA': [
    'Padr√£o regex detalhado',
    'Valida√ß√£o 888/8888 inicial',
    'Contagem de d√≠gitos 17 total',
    'Log de matches encontrados'
  ],
  
  'BRADESCO': [
    'Detec√ß√£o p√≥s-CNS',
    'Remo√ß√£o de espa√ßos',
    'Valida√ß√£o formato 15 d√≠gitos',
    'Log de processamento completo'
  ],
  
  'UNIMED': [
    'Concatena√ß√£o grupos espa√ßados',
    'Valida√ß√£o formato complexo',
    'Log de cada grupo capturado',
    'Verifica√ß√£o d√≠gito final'
  ],
  
  'AMIL': [
    'Filtro anti-data nascimento',
    'Detec√ß√£o "N√∫mero do Benefici√°rio"',
    'Separa√ß√£o d√≠gito verificador',
    'Log de valida√ß√µes aplicadas'
  ],
  
  'PORTO': [
    'Formato cart√£o de cr√©dito',
    'Concatena√ß√£o grupos de 4',
    'Valida√ß√£o 16 d√≠gitos totais',
    'Log de transforma√ß√£o'
  ]
};